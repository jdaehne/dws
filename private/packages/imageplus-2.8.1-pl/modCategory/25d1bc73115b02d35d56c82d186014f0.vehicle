<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      '9e11987063d0f2331064d855424a2620' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"ImagePlus.demo","description":"Demo chunk for Image+ template variable output.","editor_type":0,"category":0,"cache_type":0,"snippet":"<div>\\n    <h3>Image+ Demo Chunk<\\/h3>\\n    <table>\\n        <thead>\\n        <tr>\\n            <th>Description<\\/th>\\n            <th>Current Value<\\/th>\\n        <\\/tr>\\n        <\\/thead>\\n        <tbody>\\n        <tr>\\n            <td>[[%imageplus.placeholder.url? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+url]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.alt? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+alt]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.width? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+width]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.height? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+height]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.source.src? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+source.src]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.source.width? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+source.width]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.source.height? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+source.height]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.crop.width? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+crop.width]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.crop.height? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+crop.height]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.crop.x? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+crop.x]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.crop.y? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+crop.y]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.options? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+options]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.crop.options? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+crop.options]]<\\/td>\\n        <\\/tr>\\n        <\\/tbody>\\n    <\\/table>\\n\\n    <h4>Default image output<\\/h4>\\n\\n    <div>\\n        <img src=\\"[[+url]]\\" alt=\\"[[+alt]]\\"\\/>\\n        [[+caption:notempty=`<p class=\\"caption\\">[[+caption]]<\\/p>`]]\\n        [[+credits:notempty=`<p class=\\"credits\\">[[+credits]]<\\/p>`]]\\n    <\\/div>\\n\\n    <h4>Responsive image output (different crops for different viewports)<\\/h4>\\n\\n    <p>\\n        <picture>\\n            <source media=\\"(min-width: 36em)\\"\\n                    srcset=\\"[[+source.src:pthumb=`w=1024`]] 1024w,\\n                        [[+source.src:pthumb=`w=640`]] 640w,\\n                        [[+source.src:pthumb=`w=320`]] 320w\\"\\n                    sizes=\\"33.3vw\\"\\/>\\n            <source srcset=\\"[[+source.src:pthumb=`[[+crop.options]]&w=640`]] 2x,\\n                        [[+source.src:pthumb=`[[+crop.options]]&w=320`]] 1x\\"\\/>\\n            <img src=\\"[[+url]]\\" alt=\\"[[+alt]]\\"\\/>\\n        <\\/picture>\\n    <\\/p>\\n    [[+caption:notempty=`<p class=\\"caption\\">[[+caption]]<\\/p>`]]\\n    [[+credits:notempty=`<p class=\\"credits\\">[[+credits]]<\\/p>`]]\\n<\\/div>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<div>\\n    <h3>Image+ Demo Chunk<\\/h3>\\n    <table>\\n        <thead>\\n        <tr>\\n            <th>Description<\\/th>\\n            <th>Current Value<\\/th>\\n        <\\/tr>\\n        <\\/thead>\\n        <tbody>\\n        <tr>\\n            <td>[[%imageplus.placeholder.url? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+url]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.alt? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+alt]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.width? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+width]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.height? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+height]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.source.src? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+source.src]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.source.width? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+source.width]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.source.height? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+source.height]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.crop.width? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+crop.width]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.crop.height? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+crop.height]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.crop.x? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+crop.x]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.crop.y? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+crop.y]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.options? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+options]]<\\/td>\\n        <\\/tr>\\n        <tr>\\n            <td>[[%imageplus.placeholder.crop.options? &namespace=`imageplus`]]<\\/td>\\n            <td>[[+crop.options]]<\\/td>\\n        <\\/tr>\\n        <\\/tbody>\\n    <\\/table>\\n\\n    <h4>Default image output<\\/h4>\\n\\n    <div>\\n        <img src=\\"[[+url]]\\" alt=\\"[[+alt]]\\"\\/>\\n        [[+caption:notempty=`<p class=\\"caption\\">[[+caption]]<\\/p>`]]\\n        [[+credits:notempty=`<p class=\\"credits\\">[[+credits]]<\\/p>`]]\\n    <\\/div>\\n\\n    <h4>Responsive image output (different crops for different viewports)<\\/h4>\\n\\n    <p>\\n        <picture>\\n            <source media=\\"(min-width: 36em)\\"\\n                    srcset=\\"[[+source.src:pthumb=`w=1024`]] 1024w,\\n                        [[+source.src:pthumb=`w=640`]] 640w,\\n                        [[+source.src:pthumb=`w=320`]] 320w\\"\\n                    sizes=\\"33.3vw\\"\\/>\\n            <source srcset=\\"[[+source.src:pthumb=`[[+crop.options]]&w=640`]] 2x,\\n                        [[+source.src:pthumb=`[[+crop.options]]&w=320`]] 1x\\"\\/>\\n            <img src=\\"[[+url]]\\" alt=\\"[[+alt]]\\"\\/>\\n        <\\/picture>\\n    <\\/p>\\n    [[+caption:notempty=`<p class=\\"caption\\">[[+caption]]<\\/p>`]]\\n    [[+credits:notempty=`<p class=\\"credits\\">[[+credits]]<\\/p>`]]\\n<\\/div>"}',
        'guid' => '4bfd00ec3addddbb949aa161daa2d495',
        'native_key' => NULL,
        'signature' => '3236cb92c0cd52db2fef08a2ba8c1ee6',
      ),
      'f5a83623d4adda54115e5fa45e363457' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"ImagePlus.image","description":"Demo chunk for Image+ snippet output.","editor_type":0,"category":0,"cache_type":0,"snippet":"<img src=\\"[[+url]]\\" alt=\\"[[+alt]]\\"\\/>\\n[[+caption:notempty=`<p class=\\"caption\\">[[+caption]]<\\/p>`]]\\n[[+credits:notempty=`<p class=\\"credits\\">[[+credits]]<\\/p>`]]\\n","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<img src=\\"[[+url]]\\" alt=\\"[[+alt]]\\"\\/>\\n[[+caption:notempty=`<p class=\\"caption\\">[[+caption]]<\\/p>`]]\\n[[+credits:notempty=`<p class=\\"credits\\">[[+credits]]<\\/p>`]]\\n"}',
        'guid' => 'fabb5fa9292f93544eec506f9d357dc4',
        'native_key' => NULL,
        'signature' => '9c29b3cc0ed8be373dbf842c6f4c22a8',
      ),
    ),
    'Snippets' => 
    array (
      'f5b2193f29f6b930bac43b867d55421a' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"ImagePlus","description":"Snippet as alternative to Image+ TV Output Type","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * ImagePlus Snippet as alternative to Image+ TV Output Type\\n *\\n * Copyright 2013-2015 by Alan Pich <alan.pich@gmail.com>\\n * Copyright 2015-2020 by Thomas Jakobi <thomas.jakobi@partout.info>\\n *\\n * @package imageplus\\n * @subpackage snippet\\n *\\n * @author Alan Pich <alan.pich@gmail.com>\\n * @author Thomas Jakobi <thomas.jakobi@partout.info>\\n * @copyright Alan Pich 2013-2015\\n * @copyright Thomas Jakobi 2015-2020\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\/\\n\\n$corePath = $modx->getOption(\'imageplus.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/imageplus\\/\');\\n\\/** @var ImagePlus $imageplus *\\/\\n$imageplus = $modx->getService(\'imageplus\', \'ImagePlus\', $corePath . \'model\\/imageplus\\/\', array(\\n    \'core_path\' => $corePath\\n));\\n\\n$tvname = $modx->getOption(\'tvname\', $scriptProperties, \'\', true);\\n$docid = $modx->getOption(\'docid\', $scriptProperties, (isset($modx->resource)) ? $modx->resource->get(\'id\') : 0, true);\\n$type = $modx->getOption(\'type\', $scriptProperties, \'\', true);\\n$options = $modx->getOption(\'options\', $scriptProperties, \'\', true);\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'ImagePlus.image\', true);\\n$value = $modx->getOption(\'value\', $scriptProperties, \'\', true);\\n$debug = $modx->getOption(\'debug\', $scriptProperties, $imageplus->getOption(\'debug\'), false);\\n\\nif ($value) {\\n    \\/\\/ Value is set by snippet property\\n    $data = json_decode($value);\\n    if (!$data) {\\n        if ($debug) {\\n            $modx->log(xPDO::LOG_LEVEL_ERROR, \'Unable to decode JSON in snippet property\', \'\', \'Image+\');\\n            return \'Unable to decode JSON in snippet property\';\\n        }\\n    }\\n    \\/\\/ No TV is used\\n    $tv = null;\\n    $tvOutputProperties = array();\\n} else {\\n    \\/\\/ Value is retreived from template variable\\n    \\/** @var modTemplateVar $tv *\\/\\n    $tv = $modx->getObject(\'modTemplateVar\', array(\'name\' => $tvname));\\n    if ($tv) {\\n        \\/\\/ Get the raw content of the TV\\n        $value = $tv->getValue($docid);\\n        $value = $tv->processBindings($value, $docid);\\n        $tvOutputProperties = $tv->get(\'output_properties\');\\n        foreach ($tvOutputProperties as &$tvOutputProperty) {\\n            switch ($tvOutputProperty) {\\n                case \'true\' :\\n                    $tvOutputProperty = true;\\n                    break;\\n                case \'false\' :\\n                    $tvOutputProperty = false;\\n                    break;\\n            }\\n        }\\n    } else {\\n        if ($debug) {\\n            $modx->log(xPDO::LOG_LEVEL_ERROR, \\"Template Variable \'{$tvname}\' not found.\\", \'\', \'Image+\');\\n            return \\"Template Variable \'{$tvname}\' not found.\\";\\n        }\\n        $tvOutputProperties = array();\\n    }\\n}\\n\\n$output = \'\';\\n\\/\\/ Render output\\nswitch ($type) {\\n    case \'check\':\\n        $data = json_decode($value);\\n        $output = ($data && $data->sourceImg->src) ? \'image\' : \'noimage\';\\n        break;\\n    case \'tpl\':\\n        $data = json_decode($value);\\n        $output = ($value) ? $imageplus->getImageURL($value, array_merge($tvOutputProperties, $scriptProperties, array(\\n            \'docid\' => $docid,\\n            \'phpThumbParams\' => $options,\\n            \'outputChunk\' => $tpl,\\n            \'caption\' => ($data && $data->caption) ? $data->caption : \'\',\\n            \'credits\' => ($data && $data->credits) ? $data->credits : \'\'\\n        )), $tv) : \'\';\\n        break;\\n    case \'thumb\':\\n        $output = ($value) ? $imageplus->getImageURL($value, array_merge($tvOutputProperties, $scriptProperties, array(\\n            \'docid\' => $docid,\\n            \'phpThumbParams\' => $options,\\n            \'outputChunk\' => \'\',\\n        )), $tv) : \'\';\\n        break;\\n    default:\\n        $output = ($value) ? $imageplus->getImageURL($value, array_merge($tvOutputProperties, $scriptProperties, array(\\n            \'docid\' => $docid,\\n            \'phpThumbParams\' => $options,\\n        )), $tv) : \'\';\\n        break;\\n}\\nreturn $output;","locked":0,"properties":"a:5:{s:6:\\"tvname\\";a:7:{s:4:\\"name\\";s:6:\\"tvname\\";s:4:\\"desc\\";s:26:\\"imageplus.imageplus.tvname\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"imageplus:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"docid\\";a:7:{s:4:\\"name\\";s:5:\\"docid\\";s:4:\\"desc\\";s:25:\\"imageplus.imageplus.docid\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"imageplus:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"type\\";a:7:{s:4:\\"name\\";s:4:\\"type\\";s:4:\\"desc\\";s:24:\\"imageplus.imageplus.type\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"imageplus:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"options\\";a:7:{s:4:\\"name\\";s:7:\\"options\\";s:4:\\"desc\\";s:27:\\"imageplus.imageplus.options\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"imageplus:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:23:\\"imageplus.imageplus.tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:15:\\"ImagePlus.image\\";s:7:\\"lexicon\\";s:20:\\"imageplus:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * ImagePlus Snippet as alternative to Image+ TV Output Type\\n *\\n * Copyright 2013-2015 by Alan Pich <alan.pich@gmail.com>\\n * Copyright 2015-2020 by Thomas Jakobi <thomas.jakobi@partout.info>\\n *\\n * @package imageplus\\n * @subpackage snippet\\n *\\n * @author Alan Pich <alan.pich@gmail.com>\\n * @author Thomas Jakobi <thomas.jakobi@partout.info>\\n * @copyright Alan Pich 2013-2015\\n * @copyright Thomas Jakobi 2015-2020\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\/\\n\\n$corePath = $modx->getOption(\'imageplus.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/imageplus\\/\');\\n\\/** @var ImagePlus $imageplus *\\/\\n$imageplus = $modx->getService(\'imageplus\', \'ImagePlus\', $corePath . \'model\\/imageplus\\/\', array(\\n    \'core_path\' => $corePath\\n));\\n\\n$tvname = $modx->getOption(\'tvname\', $scriptProperties, \'\', true);\\n$docid = $modx->getOption(\'docid\', $scriptProperties, (isset($modx->resource)) ? $modx->resource->get(\'id\') : 0, true);\\n$type = $modx->getOption(\'type\', $scriptProperties, \'\', true);\\n$options = $modx->getOption(\'options\', $scriptProperties, \'\', true);\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'ImagePlus.image\', true);\\n$value = $modx->getOption(\'value\', $scriptProperties, \'\', true);\\n$debug = $modx->getOption(\'debug\', $scriptProperties, $imageplus->getOption(\'debug\'), false);\\n\\nif ($value) {\\n    \\/\\/ Value is set by snippet property\\n    $data = json_decode($value);\\n    if (!$data) {\\n        if ($debug) {\\n            $modx->log(xPDO::LOG_LEVEL_ERROR, \'Unable to decode JSON in snippet property\', \'\', \'Image+\');\\n            return \'Unable to decode JSON in snippet property\';\\n        }\\n    }\\n    \\/\\/ No TV is used\\n    $tv = null;\\n    $tvOutputProperties = array();\\n} else {\\n    \\/\\/ Value is retreived from template variable\\n    \\/** @var modTemplateVar $tv *\\/\\n    $tv = $modx->getObject(\'modTemplateVar\', array(\'name\' => $tvname));\\n    if ($tv) {\\n        \\/\\/ Get the raw content of the TV\\n        $value = $tv->getValue($docid);\\n        $value = $tv->processBindings($value, $docid);\\n        $tvOutputProperties = $tv->get(\'output_properties\');\\n        foreach ($tvOutputProperties as &$tvOutputProperty) {\\n            switch ($tvOutputProperty) {\\n                case \'true\' :\\n                    $tvOutputProperty = true;\\n                    break;\\n                case \'false\' :\\n                    $tvOutputProperty = false;\\n                    break;\\n            }\\n        }\\n    } else {\\n        if ($debug) {\\n            $modx->log(xPDO::LOG_LEVEL_ERROR, \\"Template Variable \'{$tvname}\' not found.\\", \'\', \'Image+\');\\n            return \\"Template Variable \'{$tvname}\' not found.\\";\\n        }\\n        $tvOutputProperties = array();\\n    }\\n}\\n\\n$output = \'\';\\n\\/\\/ Render output\\nswitch ($type) {\\n    case \'check\':\\n        $data = json_decode($value);\\n        $output = ($data && $data->sourceImg->src) ? \'image\' : \'noimage\';\\n        break;\\n    case \'tpl\':\\n        $data = json_decode($value);\\n        $output = ($value) ? $imageplus->getImageURL($value, array_merge($tvOutputProperties, $scriptProperties, array(\\n            \'docid\' => $docid,\\n            \'phpThumbParams\' => $options,\\n            \'outputChunk\' => $tpl,\\n            \'caption\' => ($data && $data->caption) ? $data->caption : \'\',\\n            \'credits\' => ($data && $data->credits) ? $data->credits : \'\'\\n        )), $tv) : \'\';\\n        break;\\n    case \'thumb\':\\n        $output = ($value) ? $imageplus->getImageURL($value, array_merge($tvOutputProperties, $scriptProperties, array(\\n            \'docid\' => $docid,\\n            \'phpThumbParams\' => $options,\\n            \'outputChunk\' => \'\',\\n        )), $tv) : \'\';\\n        break;\\n    default:\\n        $output = ($value) ? $imageplus->getImageURL($value, array_merge($tvOutputProperties, $scriptProperties, array(\\n            \'docid\' => $docid,\\n            \'phpThumbParams\' => $options,\\n        )), $tv) : \'\';\\n        break;\\n}\\nreturn $output;"}',
        'guid' => '4c135dfe691a665739d765a5e7f5e8e9',
        'native_key' => NULL,
        'signature' => '461a92e7b4d11274222c277bc5327cef',
      ),
    ),
    'Plugins' => 
    array (
      '9e4bdb840a390e4f7d487103aade491e' => 
      array (
        'unique_key' => 'name',
        'preserve_keys' => false,
        'update_object' => true,
        'related_objects' => 
        array (
          'PluginEvents' => 
          array (
            'ab2d46303df581bce7506e4996eb4592' => 
            array (
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnManagerPageBeforeRender","priority":0,"propertyset":0}',
              'guid' => 'cb80509ca543efd55a1eded10899bfba',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnManagerPageBeforeRender',
              ),
              'signature' => '60c9e06fa471ee7259fc9578aa0b97ab',
            ),
            'edb19644ab3eb03355d6730316131d9d' => 
            array (
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnTVInputPropertiesList","priority":0,"propertyset":0}',
              'guid' => 'd72c025a9a1accc8e127bf47cc1af321',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnTVInputPropertiesList',
              ),
              'signature' => '91e3ea22b4e79da63c26b7ac9d2f8e3e',
            ),
            '6c4f2cf7990ce7521e273588e8c7213f' => 
            array (
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnTVInputRenderList","priority":0,"propertyset":0}',
              'guid' => 'ff8d764381258984ea82352f3d494c53',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnTVInputRenderList',
              ),
              'signature' => 'd4380367eb5e6020d6a4a2a4335bb486',
            ),
            '5de2290475b3966dc91412288145cd69' => 
            array (
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnTVOutputRenderList","priority":0,"propertyset":0}',
              'guid' => '1b2fa56ee1d2b44a636c6c4a7d3a6c54',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnTVOutputRenderList',
              ),
              'signature' => '1907e7a31b1457a5840037ef9f297358',
            ),
            '0618e263134328a1085a642b9305fa11' => 
            array (
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnTVOutputRenderPropertiesList","priority":0,"propertyset":0}',
              'guid' => 'e5ac373c603371c07deaf06008477909',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnTVOutputRenderPropertiesList',
              ),
              'signature' => '8440c4f803b4f4946c135a2abb39bb3d',
            ),
            'c6d9fc34ed0cb78013dfcf5f403c36bd' => 
            array (
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnDocFormRender","priority":0,"propertyset":0}',
              'guid' => 'bceeb2a4efee97e97b0acb1a9f927e66',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnDocFormRender',
              ),
              'signature' => '85c331d50b7022eeda1ba4819de7bf22',
            ),
          ),
        ),
        'related_object_attributes' => 
        array (
          'PluginEvents' => 
          array (
            'preserve_keys' => true,
            'update_object' => false,
            'unique_key' => 
            array (
              0 => 'pluginid',
              1 => 'event',
            ),
          ),
        ),
        'class' => 'modPlugin',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"ImagePlus","description":"Image+ runtime hooks - registers custom TV input & output types and includes javascripts on document edit pages.","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\n * Image+ Runtime Hooks\\n *\\n * Registers custom TV input & output types and includes javascripts on document\\n * edit pages so that the TV can be used from within other extras (i.e. MIGX,\\n * Collections)\\n *\\n * Copyright 2013-2015 by Alan Pich <alan.pich@gmail.com>\\n * Copyright 2015-2020 by Thomas Jakobi <thomas.jakobi@partout.info>\\n *\\n * @package imageplus\\n * @subpackage plugin\\n *\\n * @author Alan Pich <alan.pich@gmail.com>\\n * @author Thomas Jakobi <thomas.jakobi@partout.info>\\n * @copyright Alan Pich 2013-2015\\n * @copyright Thomas Jakobi 2015-2020\\n *\\n * @event OnManagerPageBeforeRender\\n * @event OnTVInputRenderList\\n * @event OnTVOutputRenderList\\n * @event OnTVInputPropertiesList\\n * @event OnTVOutputRenderPropertiesList\\n * @event OnDocFormRender\\n *\\n * @var modX $modx\\n *\\/\\n\\n$eventName = $modx->event->name;\\n\\n$corePath = $modx->getOption(\'imageplus.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/imageplus\\/\');\\n\\/** @var ImagePlus $imageplus *\\/\\n$imageplus = $modx->getService(\'imageplus\', \'ImagePlus\', $corePath . \'model\\/imageplus\\/\', array(\\n    \'core_path\' => $corePath\\n));\\n\\nswitch ($eventName) {\\n    case \'OnManagerPageBeforeRender\':\\n        $modx->controller->addLexiconTopic(\'imageplus:default\');\\n        $imageplus->includeScriptAssets();\\n        break;\\n    case \'OnTVInputRenderList\':\\n        $modx->event->output($corePath . \'elements\\/tv\\/input\\/\');\\n        break;\\n    case \'OnTVOutputRenderList\':\\n        $modx->event->output($corePath . \'elements\\/tv\\/output\\/\');\\n        break;\\n    case \'OnTVInputPropertiesList\':\\n        $modx->event->output($corePath . \'elements\\/tv\\/input\\/options\\/\');\\n        break;\\n    case \'OnTVOutputRenderPropertiesList\':\\n        $modx->event->output($corePath . \'elements\\/tv\\/output\\/options\\/\');\\n        break;\\n    case \'OnDocFormRender\':\\n        $imageplus->includeScriptAssets();\\n        break;\\n};","locked":0,"properties":"a:0:{}","disabled":0,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Image+ Runtime Hooks\\n *\\n * Registers custom TV input & output types and includes javascripts on document\\n * edit pages so that the TV can be used from within other extras (i.e. MIGX,\\n * Collections)\\n *\\n * Copyright 2013-2015 by Alan Pich <alan.pich@gmail.com>\\n * Copyright 2015-2020 by Thomas Jakobi <thomas.jakobi@partout.info>\\n *\\n * @package imageplus\\n * @subpackage plugin\\n *\\n * @author Alan Pich <alan.pich@gmail.com>\\n * @author Thomas Jakobi <thomas.jakobi@partout.info>\\n * @copyright Alan Pich 2013-2015\\n * @copyright Thomas Jakobi 2015-2020\\n *\\n * @event OnManagerPageBeforeRender\\n * @event OnTVInputRenderList\\n * @event OnTVOutputRenderList\\n * @event OnTVInputPropertiesList\\n * @event OnTVOutputRenderPropertiesList\\n * @event OnDocFormRender\\n *\\n * @var modX $modx\\n *\\/\\n\\n$eventName = $modx->event->name;\\n\\n$corePath = $modx->getOption(\'imageplus.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/imageplus\\/\');\\n\\/** @var ImagePlus $imageplus *\\/\\n$imageplus = $modx->getService(\'imageplus\', \'ImagePlus\', $corePath . \'model\\/imageplus\\/\', array(\\n    \'core_path\' => $corePath\\n));\\n\\nswitch ($eventName) {\\n    case \'OnManagerPageBeforeRender\':\\n        $modx->controller->addLexiconTopic(\'imageplus:default\');\\n        $imageplus->includeScriptAssets();\\n        break;\\n    case \'OnTVInputRenderList\':\\n        $modx->event->output($corePath . \'elements\\/tv\\/input\\/\');\\n        break;\\n    case \'OnTVOutputRenderList\':\\n        $modx->event->output($corePath . \'elements\\/tv\\/output\\/\');\\n        break;\\n    case \'OnTVInputPropertiesList\':\\n        $modx->event->output($corePath . \'elements\\/tv\\/input\\/options\\/\');\\n        break;\\n    case \'OnTVOutputRenderPropertiesList\':\\n        $modx->event->output($corePath . \'elements\\/tv\\/output\\/options\\/\');\\n        break;\\n    case \'OnDocFormRender\':\\n        $imageplus->includeScriptAssets();\\n        break;\\n};"}',
        'guid' => '25a0bbd4a808ed9e9a18b1d9cc723a74',
        'native_key' => NULL,
        'signature' => '7545b50becb0e5dcf9428717a6969400',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Children' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 
      array (
        0 => 'parent',
        1 => 'category',
      ),
    ),
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Templates' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'templatename',
    ),
    'TemplateVars' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Plugins' => 
    array (
      'unique_key' => 'name',
      'preserve_keys' => false,
      'update_object' => true,
      'related_objects' => true,
      'related_object_attributes' => 
      array (
        'PluginEvents' => 
        array (
          'preserve_keys' => true,
          'update_object' => false,
          'unique_key' => 
          array (
            0 => 'pluginid',
            1 => 'event',
          ),
        ),
      ),
    ),
  ),
  'namespace' => 'imageplus',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"imageplus-2.8.1-pl\\/modCategory\\/25d1bc73115b02d35d56c82d186014f0\\/0\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"imageplus"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"imageplus-2.8.1-pl\\/modCategory\\/25d1bc73115b02d35d56c82d186014f0\\/1\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"imageplus"}',
    ),
    2 => 
    array (
      'type' => 'php',
      'body' => '{"source":"imageplus-2.8.1-pl\\/modCategory\\/25d1bc73115b02d35d56c82d186014f0.resolve.treehillstudio.resolver","type":"php","name":"resolve.treehillstudio"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'ddc639ee91a749c3103ee6180dab3c16',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '25d1bc73115b02d35d56c82d186014f0',
  'native_key' => NULL,
  'object' => '{"id":null,"parent":0,"category":"ImagePlus","rank":0}',
);