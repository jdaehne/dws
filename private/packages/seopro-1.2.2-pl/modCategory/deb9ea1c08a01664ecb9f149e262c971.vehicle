<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Plugins' => 
    array (
      '128089a02493c5ea647a9373fd2c8a05' => 
      array (
        'unique_key' => 'name',
        'preserve_keys' => false,
        'update_object' => true,
        'related_objects' => 
        array (
          'PluginEvents' => 
          array (
            '2c9ed688418485c61d7dcf1ca212c300' => 
            array (
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnDocFormRender","priority":0,"propertyset":0}',
              'guid' => '44d9e2fedca4d067f087e2c09fe46724',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnDocFormRender',
              ),
              'signature' => '07718bd1081f7d057383250a54347b71',
            ),
            '883247a01b3caf9d62d9c0ba9e5a4468' => 
            array (
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnDocFormSave","priority":0,"propertyset":0}',
              'guid' => '81014e6e6ee6979ebd59b593cad23292',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnDocFormSave',
              ),
              'signature' => '84dd1cd56cd9a8dd9dfdf9a63054e8f9',
            ),
            'ed2fdf5b138583167e2af801aca1117f' => 
            array (
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnResourceDuplicate","priority":0,"propertyset":0}',
              'guid' => '911b74edc01ce8c53ada2d5d696b5586',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnResourceDuplicate',
              ),
              'signature' => 'a6f04631d09fec7e16bc527559d6e758',
            ),
            '5eb5e7fffd4df8592ba25982ddbda0d2' => 
            array (
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnLoadWebDocument","priority":0,"propertyset":0}',
              'guid' => '749c76cefdf7a5e54be83d2cee38bd58',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnLoadWebDocument',
              ),
              'signature' => '13cffd85defb944b4f6ebe37ef711450',
            ),
          ),
        ),
        'related_object_attributes' => 
        array (
          'PluginEvents' => 
          array (
            'preserve_keys' => true,
            'update_object' => false,
            'unique_key' => 
            array (
              0 => 'pluginid',
              1 => 'event',
            ),
          ),
        ),
        'class' => 'modPlugin',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"seoPro","description":"SEO optimizing plugin for MODx Revolution.","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\n * The base seoPro snippet.\\n *\\n * @package seopro\\n *\\/\\n$seoPro = $modx->getService(\'seopro\', \'seoPro\', $modx->getOption(\'seopro.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/seopro\\/\') . \'model\\/seopro\\/\', $scriptProperties);\\nif (!($seoPro instanceof seoPro)) {\\n    return \'\';\\n}\\n\\n$disabledTemplates = explode(\',\', $modx->getOption(\'seopro.disabledtemplates\', null, \'0\'));\\n\\nswitch ($modx->event->name) {\\n    case \'OnDocFormRender\':\\n        $template = (string)$resource->get(\'template\');\\n        $override = false;\\n        if (isset($_REQUEST[\'template\'])) {\\n            $template = (string)$_REQUEST[\'template\'];\\n            $override = true;\\n        }\\n        if (($override && $template === \'0\') || (!empty($template) && in_array($template, $disabledTemplates))) {\\n            break;\\n        }\\n        \\n        \\n        $currClassKey = $resource->get(\'class_key\');\\n        $strFields = $modx->getOption(\'seopro.fields\', null, \'pagetitle:70,longtitle:70,description:155,alias:2023,menutitle:2023\');\\n        $arrFields = array();\\n        if (is_array(explode(\',\', $strFields))) {\\n            foreach (explode(\',\', $strFields) as $field) {\\n                list($fieldName, $fieldCount) = explode(\':\', $field);\\n                $arrFields[$fieldName] = $fieldCount;\\n            }\\n        } else {\\n            return \'\';\\n        }\\n\\n        $keywords = \'\';\\n        $modx->controller->addLexiconTopic(\'seopro:default\');\\n        $ctxKey = !empty($resource) ? $resource->get(\'context_key\') : $modx->getOption(\'default_context\');\\n        $ctx = $modx->getContext($ctxKey);\\n        if ($ctx) {\\n            $url = $ctx->getOption(\'site_url\', \'\', $modx->getOption(\'site_url\'));\\n        } else {\\n            $url = $modx->getOption(\'site_url\');\\n        }\\n        if ($mode == \'upd\') {\\n            if ($ctx) {\\n                if ($resource->get(\'id\') != $ctx->getOption(\'site_start\', \'\', $modx->getOption(\'site_start\'))) {\\n                    $url .= $resource->get(\'uri\');\\n                }\\n            } else {\\n                $url = $modx->makeUrl($resource->get(\'id\'), \'\', \'\', \'full\');\\n            }\\n            $url = str_replace(\\n                $resource->get(\'alias\'),\\n                \'<span id=\\\\\\"seopro-replace-alias\\\\\\">\' . $resource->get(\'alias\') . \'<\\/span>\',\\n                $url\\n            );\\n            $seoKeywords = $modx->getObject(\'seoKeywords\', array(\'resource\' => $resource->get(\'id\')));\\n            if ($seoKeywords) {\\n                $keywords = $seoKeywords->get(\'keywords\');\\n            }\\n        }\\n\\n        if ($_REQUEST[\'id\'] == $modx->getOption(\'site_start\')) {\\n            unset($arrFields[\'alias\']);\\n            unset($arrFields[\'menutitle\']);\\n        }\\n\\n\\n        $config = $seoPro->config;\\n        unset($config[\'resource\']);\\n        $modx->regClientStartupHTMLBlock(\'<script type=\\"text\\/javascript\\">\\n        Ext.onReady(function() {\\n            seoPro.config = \' . $modx->toJSON($config) . \';\\n            seoPro.config.record = \\"\' . $keywords . \'\\";\\n            seoPro.config.values = {};\\n            seoPro.config.fields = \\"\' . implode(\\",\\", array_keys($arrFields)) . \'\\";\\n            seoPro.config.chars = \' . $modx->toJSON($arrFields) . \'\\n            seoPro.config.url = \\"\' . $url . \'\\";\\n        });\\n    <\\/script>\');\\n\\n        \\/* include CSS and JS*\\/\\n        $version = $modx->getVersionData();\\n        if($version[\'version\'] == 2 && $version[\'major_version\'] == 2){\\n            $modx->regClientCSS($seoPro->config[\'assetsUrl\'] . \'css\\/mgr.css\');\\n        }else{\\n            $modx->regClientCSS($seoPro->config[\'assetsUrl\'] . \'css\\/mgr23.css\');\\n        }\\n        $modx->regClientStartupScript($seoPro->config[\'assetsUrl\'] . \'js\\/mgr\\/seopro.js??v=\' . $modx->getOption(\'seopro.version\', null, \'v1.0.0\'));\\n        $modx->regClientStartupScript($seoPro->config[\'assetsUrl\'] . \'js\\/mgr\\/resource.js?v=\' . $modx->getOption(\'seopro.version\', null, \'v1.0.0\'));\\n\\n        break;\\n\\n    case \'OnDocFormSave\':\\n        $template = (string)$resource->get(\'template\');\\n        $override = false;\\n        if (isset($_REQUEST[\'template\'])) {\\n            $template = (string)$_REQUEST[\'template\'];\\n            $override = true;\\n        }\\n        if (($override && $template === \'0\') || (!empty($template) && in_array($template, $disabledTemplates))) {\\n            break;\\n        }\\n        $seoKeywords = $modx->getObject(\'seoKeywords\', array(\'resource\' => $resource->get(\'id\')));\\n        if (!$seoKeywords && isset($resource)) {\\n            $seoKeywords = $modx->newObject(\'seoKeywords\', array(\'resource\' => $resource->get(\'id\')));\\n        }\\n        if($seoKeywords){\\n            if (isset($_POST[\'keywords\'])){\\n                $seoKeywords->set(\'keywords\', trim($_POST[\'keywords\'], \',\'));\\n            } else {\\n                $seoKeywords->set(\'keywords\', \'\');\\n            }\\n            $seoKeywords->save();\\n        }\\n        break;\\n\\n    case \'onResourceDuplicate\':\\n        $template = (string)$resource->get(\'template\');\\n        $override = false;\\n        if (isset($_REQUEST[\'template\'])) {\\n            $template = (string)$_REQUEST[\'template\'];\\n            $override = true;\\n        }\\n        if (($override && $template === \'0\') || (!empty($template) && in_array($template, $disabledTemplates))) {\\n            break;\\n        }\\n\\n        $seoKeywords = $modx->getObject(\'seoKeywords\', array(\'resource\' => $resource->get(\'id\')));\\n        if (!$seoKeywords) {\\n            $seoKeywords = $modx->newObject(\'seoKeywords\', array(\'resource\' => $resource->get(\'id\')));\\n        }\\n        $newSeoKeywords = $modx->newObject(\'seoKeywords\');\\n        $newSeoKeywords->fromArray($seoKeywords->toArray());\\n        $newSeoKeywords->set(\'resource\', $newResource->get(\'id\'));\\n        $newSeoKeywords->save();\\n        break;\\n\\n    case \'OnLoadWebDocument\':\\n        if ($modx->context->get(\'key\') == \\"mgr\\") {\\n            break;\\n        }\\n        $template = ($modx->resource->get(\'template\')) ? (string)$modx->resource->get(\'template\') : \'\';\\n        if (in_array($template, $disabledTemplates)) {\\n            break;\\n        }\\n        $seoKeywords = $modx->getObject(\'seoKeywords\', array(\'resource\' => $modx->resource->get(\'id\')));\\n        if ($seoKeywords) {\\n            $keyWords = $seoKeywords->get(\'keywords\');\\n            $modx->setPlaceholder(\'seoPro.keywords\', $keyWords);\\n        }\\n        \\/\\/ Render the meta title, based on system settings\\n        $titleFormat = $modx->getOption(\'seopro.title_format\');\\n        if (empty($titleFormat)) {\\n            $siteDelimiter = $modx->getOption(\'seopro.delimiter\', null, \'\\/\');\\n            $siteUseSitename = (boolean)$modx->getOption(\'seopro.usesitename\', null, true);\\n            $siteID = $modx->resource->get(\'id\');\\n            $siteName = $modx->getOption(\'site_name\');\\n            $longtitle = $modx->resource->get(\'longtitle\');\\n            $pagetitle = $modx->resource->get(\'pagetitle\');\\n            $seoProTitle = array();\\n            if ($siteID == $modx->getOption(\'site_start\')) {\\n                $seoProTitle[\'pagetitle\'] = !empty($longtitle) ? $longtitle : $siteName;\\n            } else {\\n                $seoProTitle[\'pagetitle\'] = !empty($longtitle) ? $longtitle : $pagetitle;\\n                if ($siteUseSitename) {\\n                    $seoProTitle[\'delimiter\'] = $siteDelimiter;\\n                    $seoProTitle[\'sitename\'] = $siteName;\\n                }\\n            }\\n            $title = implode(\' \', $seoProTitle);\\n        } else {\\n            $title = $modx->getOption(\'seopro.title_format\');\\n        }\\n        $modx->setPlaceholder(\'seoPro.title\', $title);\\n        break;\\n}","locked":0,"properties":"a:0:{}","disabled":0,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * The base seoPro snippet.\\n *\\n * @package seopro\\n *\\/\\n$seoPro = $modx->getService(\'seopro\', \'seoPro\', $modx->getOption(\'seopro.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/seopro\\/\') . \'model\\/seopro\\/\', $scriptProperties);\\nif (!($seoPro instanceof seoPro)) {\\n    return \'\';\\n}\\n\\n$disabledTemplates = explode(\',\', $modx->getOption(\'seopro.disabledtemplates\', null, \'0\'));\\n\\nswitch ($modx->event->name) {\\n    case \'OnDocFormRender\':\\n        $template = (string)$resource->get(\'template\');\\n        $override = false;\\n        if (isset($_REQUEST[\'template\'])) {\\n            $template = (string)$_REQUEST[\'template\'];\\n            $override = true;\\n        }\\n        if (($override && $template === \'0\') || (!empty($template) && in_array($template, $disabledTemplates))) {\\n            break;\\n        }\\n        \\n        \\n        $currClassKey = $resource->get(\'class_key\');\\n        $strFields = $modx->getOption(\'seopro.fields\', null, \'pagetitle:70,longtitle:70,description:155,alias:2023,menutitle:2023\');\\n        $arrFields = array();\\n        if (is_array(explode(\',\', $strFields))) {\\n            foreach (explode(\',\', $strFields) as $field) {\\n                list($fieldName, $fieldCount) = explode(\':\', $field);\\n                $arrFields[$fieldName] = $fieldCount;\\n            }\\n        } else {\\n            return \'\';\\n        }\\n\\n        $keywords = \'\';\\n        $modx->controller->addLexiconTopic(\'seopro:default\');\\n        $ctxKey = !empty($resource) ? $resource->get(\'context_key\') : $modx->getOption(\'default_context\');\\n        $ctx = $modx->getContext($ctxKey);\\n        if ($ctx) {\\n            $url = $ctx->getOption(\'site_url\', \'\', $modx->getOption(\'site_url\'));\\n        } else {\\n            $url = $modx->getOption(\'site_url\');\\n        }\\n        if ($mode == \'upd\') {\\n            if ($ctx) {\\n                if ($resource->get(\'id\') != $ctx->getOption(\'site_start\', \'\', $modx->getOption(\'site_start\'))) {\\n                    $url .= $resource->get(\'uri\');\\n                }\\n            } else {\\n                $url = $modx->makeUrl($resource->get(\'id\'), \'\', \'\', \'full\');\\n            }\\n            $url = str_replace(\\n                $resource->get(\'alias\'),\\n                \'<span id=\\\\\\"seopro-replace-alias\\\\\\">\' . $resource->get(\'alias\') . \'<\\/span>\',\\n                $url\\n            );\\n            $seoKeywords = $modx->getObject(\'seoKeywords\', array(\'resource\' => $resource->get(\'id\')));\\n            if ($seoKeywords) {\\n                $keywords = $seoKeywords->get(\'keywords\');\\n            }\\n        }\\n\\n        if ($_REQUEST[\'id\'] == $modx->getOption(\'site_start\')) {\\n            unset($arrFields[\'alias\']);\\n            unset($arrFields[\'menutitle\']);\\n        }\\n\\n\\n        $config = $seoPro->config;\\n        unset($config[\'resource\']);\\n        $modx->regClientStartupHTMLBlock(\'<script type=\\"text\\/javascript\\">\\n        Ext.onReady(function() {\\n            seoPro.config = \' . $modx->toJSON($config) . \';\\n            seoPro.config.record = \\"\' . $keywords . \'\\";\\n            seoPro.config.values = {};\\n            seoPro.config.fields = \\"\' . implode(\\",\\", array_keys($arrFields)) . \'\\";\\n            seoPro.config.chars = \' . $modx->toJSON($arrFields) . \'\\n            seoPro.config.url = \\"\' . $url . \'\\";\\n        });\\n    <\\/script>\');\\n\\n        \\/* include CSS and JS*\\/\\n        $version = $modx->getVersionData();\\n        if($version[\'version\'] == 2 && $version[\'major_version\'] == 2){\\n            $modx->regClientCSS($seoPro->config[\'assetsUrl\'] . \'css\\/mgr.css\');\\n        }else{\\n            $modx->regClientCSS($seoPro->config[\'assetsUrl\'] . \'css\\/mgr23.css\');\\n        }\\n        $modx->regClientStartupScript($seoPro->config[\'assetsUrl\'] . \'js\\/mgr\\/seopro.js??v=\' . $modx->getOption(\'seopro.version\', null, \'v1.0.0\'));\\n        $modx->regClientStartupScript($seoPro->config[\'assetsUrl\'] . \'js\\/mgr\\/resource.js?v=\' . $modx->getOption(\'seopro.version\', null, \'v1.0.0\'));\\n\\n        break;\\n\\n    case \'OnDocFormSave\':\\n        $template = (string)$resource->get(\'template\');\\n        $override = false;\\n        if (isset($_REQUEST[\'template\'])) {\\n            $template = (string)$_REQUEST[\'template\'];\\n            $override = true;\\n        }\\n        if (($override && $template === \'0\') || (!empty($template) && in_array($template, $disabledTemplates))) {\\n            break;\\n        }\\n        $seoKeywords = $modx->getObject(\'seoKeywords\', array(\'resource\' => $resource->get(\'id\')));\\n        if (!$seoKeywords && isset($resource)) {\\n            $seoKeywords = $modx->newObject(\'seoKeywords\', array(\'resource\' => $resource->get(\'id\')));\\n        }\\n        if($seoKeywords){\\n            if (isset($_POST[\'keywords\'])){\\n                $seoKeywords->set(\'keywords\', trim($_POST[\'keywords\'], \',\'));\\n            } else {\\n                $seoKeywords->set(\'keywords\', \'\');\\n            }\\n            $seoKeywords->save();\\n        }\\n        break;\\n\\n    case \'onResourceDuplicate\':\\n        $template = (string)$resource->get(\'template\');\\n        $override = false;\\n        if (isset($_REQUEST[\'template\'])) {\\n            $template = (string)$_REQUEST[\'template\'];\\n            $override = true;\\n        }\\n        if (($override && $template === \'0\') || (!empty($template) && in_array($template, $disabledTemplates))) {\\n            break;\\n        }\\n\\n        $seoKeywords = $modx->getObject(\'seoKeywords\', array(\'resource\' => $resource->get(\'id\')));\\n        if (!$seoKeywords) {\\n            $seoKeywords = $modx->newObject(\'seoKeywords\', array(\'resource\' => $resource->get(\'id\')));\\n        }\\n        $newSeoKeywords = $modx->newObject(\'seoKeywords\');\\n        $newSeoKeywords->fromArray($seoKeywords->toArray());\\n        $newSeoKeywords->set(\'resource\', $newResource->get(\'id\'));\\n        $newSeoKeywords->save();\\n        break;\\n\\n    case \'OnLoadWebDocument\':\\n        if ($modx->context->get(\'key\') == \\"mgr\\") {\\n            break;\\n        }\\n        $template = ($modx->resource->get(\'template\')) ? (string)$modx->resource->get(\'template\') : \'\';\\n        if (in_array($template, $disabledTemplates)) {\\n            break;\\n        }\\n        $seoKeywords = $modx->getObject(\'seoKeywords\', array(\'resource\' => $modx->resource->get(\'id\')));\\n        if ($seoKeywords) {\\n            $keyWords = $seoKeywords->get(\'keywords\');\\n            $modx->setPlaceholder(\'seoPro.keywords\', $keyWords);\\n        }\\n        \\/\\/ Render the meta title, based on system settings\\n        $titleFormat = $modx->getOption(\'seopro.title_format\');\\n        if (empty($titleFormat)) {\\n            $siteDelimiter = $modx->getOption(\'seopro.delimiter\', null, \'\\/\');\\n            $siteUseSitename = (boolean)$modx->getOption(\'seopro.usesitename\', null, true);\\n            $siteID = $modx->resource->get(\'id\');\\n            $siteName = $modx->getOption(\'site_name\');\\n            $longtitle = $modx->resource->get(\'longtitle\');\\n            $pagetitle = $modx->resource->get(\'pagetitle\');\\n            $seoProTitle = array();\\n            if ($siteID == $modx->getOption(\'site_start\')) {\\n                $seoProTitle[\'pagetitle\'] = !empty($longtitle) ? $longtitle : $siteName;\\n            } else {\\n                $seoProTitle[\'pagetitle\'] = !empty($longtitle) ? $longtitle : $pagetitle;\\n                if ($siteUseSitename) {\\n                    $seoProTitle[\'delimiter\'] = $siteDelimiter;\\n                    $seoProTitle[\'sitename\'] = $siteName;\\n                }\\n            }\\n            $title = implode(\' \', $seoProTitle);\\n        } else {\\n            $title = $modx->getOption(\'seopro.title_format\');\\n        }\\n        $modx->setPlaceholder(\'seoPro.title\', $title);\\n        break;\\n}"}',
        'guid' => 'f5a510154125948c3f019f69578a3dc8',
        'native_key' => NULL,
        'signature' => 'e5e34ff14333b3a47236b75236793545',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Children' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 
      array (
        0 => 'parent',
        1 => 'category',
      ),
    ),
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Templates' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'templatename',
    ),
    'TemplateVars' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Plugins' => 
    array (
      'unique_key' => 'name',
      'preserve_keys' => false,
      'update_object' => true,
      'related_objects' => true,
      'related_object_attributes' => 
      array (
        'PluginEvents' => 
        array (
          'preserve_keys' => true,
          'update_object' => false,
          'unique_key' => 
          array (
            0 => 'pluginid',
            1 => 'event',
          ),
        ),
      ),
    ),
  ),
  'namespace' => 'seopro',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"seopro-1.2.2-pl\\/modCategory\\/deb9ea1c08a01664ecb9f149e262c971\\/0\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"seopro"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"seopro-1.2.2-pl\\/modCategory\\/deb9ea1c08a01664ecb9f149e262c971\\/1\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"seopro"}',
    ),
    2 => 
    array (
      'type' => 'php',
      'body' => '{"source":"seopro-1.2.2-pl\\/modCategory\\/deb9ea1c08a01664ecb9f149e262c971.gpm.resolve.tables.resolver","type":"php","name":"gpm.resolve.tables"}',
    ),
    3 => 
    array (
      'type' => 'php',
      'body' => '{"source":"seopro-1.2.2-pl\\/modCategory\\/deb9ea1c08a01664ecb9f149e262c971.setupoptions.resolver.resolver","type":"php","name":"setupoptions.resolver"}',
    ),
    4 => 
    array (
      'type' => 'php',
      'body' => '{"source":"seopro-1.2.2-pl\\/modCategory\\/deb9ea1c08a01664ecb9f149e262c971.stercextra.resolver.resolver","type":"php","name":"stercextra.resolver"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '1253c45599fa07a68d63047f39b71057',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => 'deb9ea1c08a01664ecb9f149e262c971',
  'native_key' => NULL,
  'object' => '{"id":null,"parent":0,"category":"seoPro","rank":0}',
);